[package]
name = "rust-guardian"
version = "0.1.0"
edition = "2021"
authors = ["The Rust Guardian Team"]
description = "Dynamic code quality enforcement preventing incomplete or placeholder code"
license = "MIT"
repository = "https://github.com/cloudfunnels/rust-guardian"
documentation = "https://docs.rs/rust-guardian"
keywords = ["code-quality", "static-analysis", "rust", "cli", "validation"]
categories = ["development-tools", "command-line-utilities"]
readme = "README.md"

[lib]
name = "rust_guardian"
path = "src/lib.rs"

[[bin]]
name = "rust-guardian"
path = "src/main.rs"

[dependencies]
# Core parsing and analysis
syn = { version = "2.0", features = ["full", "extra-traits", "visit"] }
quote = "1.0"
proc-macro2 = "1.0"

# Pattern matching
regex = { version = "1.10", features = ["perf"] }

# Serialization and configuration
serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9"
serde_json = "1.0"

# CLI framework
clap = { version = "4.5", features = ["derive", "color", "suggestions"] }

# Async runtime
tokio = { version = "1.0", features = ["fs", "rt-multi-thread", "macros", "time"] }

# Parallel processing
rayon = "1.8"

# File system operations
walkdir = "2.4"
glob = "0.3"

# File watching
notify = { version = "6.1", features = ["macos_kqueue"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Utilities
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.8", features = ["v4"] }
sha2 = "0.10"

# Optional performance optimizations
memmap2 = { version = "0.9", optional = true }
lru = { version = "0.12", optional = true }

# Terminal output
crossterm = { version = "0.27", optional = true }
colored = { version = "2.1", optional = true }

[dev-dependencies]
tempfile = "3.8"
criterion = { version = "0.5", features = ["html_reports"] }
rstest = "0.18"
tokio-test = "0.4"

[features]
default = ["cli", "cache", "colors"]

# CLI interface with colored output
cli = ["crossterm", "colored"]

# Performance caching
cache = ["lru", "memmap2"]

# Colored terminal output
colors = ["colored", "crossterm"]

# All features for development
full = ["cli", "cache", "colors"]

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true

[profile.test]
opt-level = 1

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace]
# Intentionally empty to make this crate a standalone workspace root